{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\derpn\\\\Desktop\\\\koulu\\\\2020-2021\\\\www\\\\ht\\\\front\\\\src\\\\App.js\";\nimport React from 'react';\nimport Note from './components/Note';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addNote = event => {\n      event.preventDefault();\n      const noteObject = {\n        content: this.state.newNote,\n        date: new Date(),\n        important: Math.random() > 0.5,\n        name: this.state.newName\n      };\n      axios.post('http://localhost:3001/notes', noteObject).then(response => {\n        console.log(response);\n        this.setState({\n          notes: this.state.notes.concat(response.data),\n          newNote: ''\n        });\n      });\n    };\n\n    this.handleNoteChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        newNote: event.target.value\n      });\n    };\n\n    this.toggleVisible = () => {\n      this.setState({\n        showAll: !this.state.showAll\n      });\n    };\n\n    this.state = {\n      notes: [],\n      newNote: '',\n      showAll: true,\n      newName: ''\n    };\n    console.log('constructor');\n  }\n\n  componentDidMount() {\n    console.log('will mount');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      this.setState({\n        notes: response.data\n      });\n    });\n  }\n\n  render() {\n    console.log('render');\n    const notesToShow = this.state.showAll ? this.state.notes : this.state.notes.filter(note => note.important);\n    const label = this.state.showAll ? 'vain tärkeät' : 'kaikki';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Muistiinpanot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.toggleVisible,\n          children: [\"n\\xE4yt\\xE4 \", label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note //toggleImportance={this.toggleImportanceOf(note.id)}\n          ,\n          date: note.date\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.addNote,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.newNote,\n          onChange: this.handleNoteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"tallenna\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/derpn/Desktop/koulu/2020-2021/www/ht/front/src/App.js"],"names":["React","Note","axios","App","Component","constructor","props","addNote","event","preventDefault","noteObject","content","state","newNote","date","Date","important","Math","random","name","newName","post","then","response","console","log","setState","notes","concat","data","handleNoteChange","target","value","toggleVisible","showAll","componentDidMount","get","render","notesToShow","filter","note","label","map","id"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Note from './components/Note'\r\nimport axios from 'axios'\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            notes: [],\r\n            newNote: '',\r\n            showAll: true,\r\n            newName: ''\r\n        }\r\n        console.log('constructor')\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('will mount')\r\n        axios\r\n            .get('http://localhost:3001/notes')\r\n            .then(response => {\r\n              console.log('promise fulfilled')\r\n              this.setState({ notes: response.data })\r\n            })\r\n    }\r\n\r\n    addNote = (event) => {\r\n        event.preventDefault()\r\n        const noteObject = {\r\n            content: this.state.newNote,\r\n            date: new Date(),\r\n            important: Math.random() > 0.5,\r\n            name: this.state.newName\r\n            \r\n        }\r\n        axios.post('http://localhost:3001/notes', noteObject)\r\n            .then(response => {\r\n                console.log(response)\r\n                this.setState({\r\n                    notes: this.state.notes.concat(response.data),\r\n                    newNote: ''\r\n                })\r\n            })\r\n    }\r\n\r\n    handleNoteChange = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({newNote: event.target.value})\r\n    }\r\n\r\n    toggleVisible = () => {\r\n        this.setState({showAll: !this.state.showAll})\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        console.log('render')\r\n        const notesToShow = \r\n            this.state.showAll ?\r\n                this.state.notes :\r\n                this.state.notes.filter(note => note.important)\r\n        \r\n        const label = this.state.showAll ? 'vain tärkeät' : 'kaikki'\r\n        return (\r\n            <div>\r\n                <h1>Muistiinpanot</h1>\r\n                <div>\r\n                    <button onClick={this.toggleVisible}>\r\n                        näytä {label}\r\n                    </button>\r\n                </div>\r\n                <ul>\r\n                    {notesToShow.map(note =>\r\n                        <Note\r\n                            key={note.id}\r\n                            note={note}\r\n                            //toggleImportance={this.toggleImportanceOf(note.id)}\r\n                            date={note.date}\r\n                        />\r\n                    )}\r\n                </ul>\r\n                <form onSubmit={this.addNote}>\r\n                    <input \r\n                        value={this.state.newNote}\r\n                        onChange={this.handleNoteChange}\r\n                    />\r\n                    <button type=\"submit\">\r\n                        tallenna\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}   \r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}