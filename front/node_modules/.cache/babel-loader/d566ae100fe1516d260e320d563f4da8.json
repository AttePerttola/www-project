{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\derpn\\\\Desktop\\\\koulu\\\\2020-2021\\\\www\\\\ht\\\\front\\\\src\\\\App.js\";\nimport React from 'react';\nimport Message from './components/Message';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMessageChange = event => {\n      this.setState({\n        newMessage: event.target.value\n      });\n    };\n\n    this.handleNameChange = event => {\n      this.setState({\n        newName: event.target.value\n      });\n    };\n\n    this.state = {\n      messages: [],\n      newMessage: '',\n      newName: ''\n    }; //binding methods to prevent problems when calling them\n\n    this.handleMessageChange = this.handleMessageChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.addMessage = this.addMessage.bind(this);\n    console.log('constructor');\n  }\n\n  componentDidMount() {\n    console.log('will mount');\n    this.getMessages();\n  } //getting the messages from backend and saving them in array\n\n\n  async getMessages() {\n    const url = 'http://localhost:8000/getArray';\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      messages: data\n    });\n  } //creating a message object and sending it to backend\n\n\n  async addMessage() {\n    const messageObject = {\n      content: this.state.newMessage,\n      username: this.state.newName,\n      id: this.state.messages.length + 1\n    };\n    console.log(messageObject);\n    axios.post('http://localhost:8000/getArray', messageObject);\n  } //event handlers for the input fields\n\n\n  render() {\n    console.log('render');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ScuffedLauta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageBoard\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"submit\",\n          onSubmit: this.addMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"msg\",\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 58\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"msg\",\n            maxLength: \"50\",\n            value: this.state.newMessage,\n            onChange: this.handleMessageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"author\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 62\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"author\",\n            maxLength: \"25\",\n            value: this.state.newName,\n            onChange: this.handleNameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"messageBox\",\n          children: this.state.messages.map(content => /*#__PURE__*/_jsxDEV(Message, {\n            message: content\n          }, content.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 61\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/derpn/Desktop/koulu/2020-2021/www/ht/front/src/App.js"],"names":["React","Message","axios","App","Component","constructor","props","handleMessageChange","event","setState","newMessage","target","value","handleNameChange","newName","state","messages","bind","addMessage","console","log","componentDidMount","getMessages","url","response","fetch","data","json","messageObject","content","username","id","length","post","render","map"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Message from './components/Message'\r\nimport axios from 'axios'\r\nimport './App.css'\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            messages: [],\r\n            newMessage: '',\r\n            newName: ''\r\n        }\r\n        //binding methods to prevent problems when calling them\r\n        this.handleMessageChange = this.handleMessageChange.bind(this)\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.addMessage = this.addMessage.bind(this)\r\n\r\n        console.log('constructor')\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        console.log('will mount')\r\n        this.getMessages()\r\n        \r\n        \r\n    }\r\n\r\n    //getting the messages from backend and saving them in array\r\n    async getMessages() {\r\n        const url = 'http://localhost:8000/getArray'\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        this.setState({messages: data})\r\n    }\r\n\r\n    //creating a message object and sending it to backend\r\n    async addMessage() {\r\n        \r\n        const messageObject = {\r\n            content: this.state.newMessage,\r\n            username: this.state.newName,\r\n            id: this.state.messages.length + 1\r\n            \r\n        }\r\n        console.log(messageObject)\r\n        axios.post('http://localhost:8000/getArray', messageObject)\r\n            \r\n    }\r\n\r\n    //event handlers for the input fields\r\n    handleMessageChange = (event) => {\r\n        this.setState({newMessage: event.target.value})\r\n    }\r\n    \r\n    handleNameChange = (event) => {\r\n        this.setState({newName: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        console.log('render')\r\n    \r\n        \r\n        \r\n        \r\n        return (\r\n            <div>\r\n                <h1>ScuffedLauta</h1>\r\n                <div className='messageBoard'>\r\n                    <form className='submit' onSubmit={this.addMessage}>\r\n                        <label for='msg'>Message:</label><br/>\r\n                        <input\r\n                            type = 'text'\r\n                            name = 'msg'\r\n                            maxLength = '50' \r\n                            value={this.state.newMessage}\r\n                            onChange={this.handleMessageChange}\r\n                        /><br/>\r\n                        <label for='author'>Username:</label><br/>\r\n                        <input\r\n                            type = 'text'\r\n                            name = 'author'\r\n                            maxLength = '25'\r\n                            value={this.state.newName}\r\n                            onChange={this.handleNameChange}\r\n                        /><br/><br/>\r\n                        <button type=\"submit\">\r\n                            Post\r\n                        </button>\r\n                    </form>\r\n                \r\n                    <ul className='messageBox'>\r\n                        {this.state.messages.map(content => <Message key={content.id} message={content}/>)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   \r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}